name: Spring CI

on:
  push:
    paths:
      - "Spring/**"
    branches: [ "main" ]

  workflow_dispatch:
    
permissions: read-all

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      working_directory: ./Spring

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Grant execute permission for gradlew & Build with Gradle
      run: |
        cd ${{ env.working_directory }}
        chmod +x ./gradlew
        ./gradlew clean build

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: msa_ecr_spring_registry
        IMAGE_TAG: ${{ github.sha }}
      run: |
        cd ${{ env.working_directory }}
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

    - name: Set Payload Aliases
      id: set_payload
      run: |
        echo "service_name=${{ github.event.client_payload.service_name }}" >> $GITHUB_ENV
        echo "service_prefix=${{ github.event.client_payload.service_prefix }}" >> $GITHUB_ENV
        echo "image_tag=${{ github.event.client_payload.image_tag }}" >> $GITHUB_ENV
        echo "service_port=${{ github.event.client_payload.service_port }}" >> $GITHUB_ENV

    - name: Pull Commit 
      run: git pull

    - name: Use yq to modify Config file
      working-directory: ${{ github.workspace}}/GitOps
      run: |
        prefix='/spring'
        if [ -n "${{ env.service_prefix }}" ] && [ "${{ env.service_prefix }}" != "null" ]; then
          prefix='.config.prefix = "${{ env.service_prefix }}"'
        else
          prefix='.config.prefix = null'
        fi

        yq eval -i ".config.service_name = \"${{ env.service_name }}\" | \
                  .config.imageTag = \"${{ env.image_tag }}\" | \
                  .config.containerPort = ${{ env.service_port }} | \
                  $prefix" -i GitOps/charts/resource/Spring/resource.yaml
      
    - name: Commit The New Image Reference
      if: ${{ env.service_name && env.service_prefix && env.image_tag}}
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: "update :: ${{ env.service_name }}: Deploy new image ${{ env.image_tag }}"
        branch: main
        commit_options: '--no-verify --signoff'
        repository: .
        commit_user_name: Junho-06
        commit_user_email: ${{ secrets.commit_user_email }}
        commit_author: Junho-06 <${{ secrets.commit_user_email }}>